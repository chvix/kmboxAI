/* automatically generated by rust-bindgen 0.72.0 */

pub const image_format_t_IMAGE_FORMAT_GRAY8: image_format_t = 0;
pub const image_format_t_IMAGE_FORMAT_RGB888: image_format_t = 1;
pub const image_format_t_IMAGE_FORMAT_RGBA8888: image_format_t = 2;
pub const image_format_t_IMAGE_FORMAT_YUV420SP_NV21: image_format_t = 3;
pub const image_format_t_IMAGE_FORMAT_YUV420SP_NV12: image_format_t = 4;
pub const image_format_t_IMAGE_FORMAT_BGR_888: image_format_t = 5;
#[doc = " @brief Image pixel format\n"]
pub type image_format_t = ::std::os::raw::c_uint;
#[doc = " @brief Image buffer\n"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct image_buffer_t {
    pub width: ::std::os::raw::c_int,
    pub height: ::std::os::raw::c_int,
    pub width_stride: ::std::os::raw::c_int,
    pub height_stride: ::std::os::raw::c_int,
    pub format: image_format_t,
    pub virt_addr: *mut ::std::os::raw::c_uchar,
    pub size: ::std::os::raw::c_int,
    pub fd: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of image_buffer_t"][::std::mem::size_of::<image_buffer_t>() - 40usize];
    ["Alignment of image_buffer_t"][::std::mem::align_of::<image_buffer_t>() - 8usize];
    ["Offset of field: image_buffer_t::width"]
        [::std::mem::offset_of!(image_buffer_t, width) - 0usize];
    ["Offset of field: image_buffer_t::height"]
        [::std::mem::offset_of!(image_buffer_t, height) - 4usize];
    ["Offset of field: image_buffer_t::width_stride"]
        [::std::mem::offset_of!(image_buffer_t, width_stride) - 8usize];
    ["Offset of field: image_buffer_t::height_stride"]
        [::std::mem::offset_of!(image_buffer_t, height_stride) - 12usize];
    ["Offset of field: image_buffer_t::format"]
        [::std::mem::offset_of!(image_buffer_t, format) - 16usize];
    ["Offset of field: image_buffer_t::virt_addr"]
        [::std::mem::offset_of!(image_buffer_t, virt_addr) - 24usize];
    ["Offset of field: image_buffer_t::size"]
        [::std::mem::offset_of!(image_buffer_t, size) - 32usize];
    ["Offset of field: image_buffer_t::fd"][::std::mem::offset_of!(image_buffer_t, fd) - 36usize];
};
#[doc = " @brief Image rectangle\n"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct image_rect_t {
    pub left: ::std::os::raw::c_int,
    pub top: ::std::os::raw::c_int,
    pub right: ::std::os::raw::c_int,
    pub bottom: ::std::os::raw::c_int,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of image_rect_t"][::std::mem::size_of::<image_rect_t>() - 16usize];
    ["Alignment of image_rect_t"][::std::mem::align_of::<image_rect_t>() - 4usize];
    ["Offset of field: image_rect_t::left"][::std::mem::offset_of!(image_rect_t, left) - 0usize];
    ["Offset of field: image_rect_t::top"][::std::mem::offset_of!(image_rect_t, top) - 4usize];
    ["Offset of field: image_rect_t::right"][::std::mem::offset_of!(image_rect_t, right) - 8usize];
    ["Offset of field: image_rect_t::bottom"]
        [::std::mem::offset_of!(image_rect_t, bottom) - 12usize];
};
#[doc = " @brief Image obb rectangle\n"]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct image_obb_box_t {
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub w: ::std::os::raw::c_int,
    pub h: ::std::os::raw::c_int,
    pub angle: f32,
}
#[allow(clippy::unnecessary_operation, clippy::identity_op)]
const _: () = {
    ["Size of image_obb_box_t"][::std::mem::size_of::<image_obb_box_t>() - 20usize];
    ["Alignment of image_obb_box_t"][::std::mem::align_of::<image_obb_box_t>() - 4usize];
    ["Offset of field: image_obb_box_t::x"][::std::mem::offset_of!(image_obb_box_t, x) - 0usize];
    ["Offset of field: image_obb_box_t::y"][::std::mem::offset_of!(image_obb_box_t, y) - 4usize];
    ["Offset of field: image_obb_box_t::w"][::std::mem::offset_of!(image_obb_box_t, w) - 8usize];
    ["Offset of field: image_obb_box_t::h"][::std::mem::offset_of!(image_obb_box_t, h) - 12usize];
    ["Offset of field: image_obb_box_t::angle"]
        [::std::mem::offset_of!(image_obb_box_t, angle) - 16usize];
};
